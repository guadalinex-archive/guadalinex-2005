#!/bin/sh
set -e


###°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°
### Definition of global variables and functions
###____________________________________________________________________________
package=eagle-usb
configfile=/etc/${package}/setvars

. /usr/share/debconf/confmodule
. ${configfile}



#    * postinst configure most-recently-configured-version
#    * old-postinst abort-upgrade new-version
#    * conflictor's-postinst abort-remove in-favour package new-version
#    * deconfigured's-postinst abort-deconfigure in-favour failed-install-package version removing conflicting-package version
case $1 in 
    configure)		# We continue
	configuredversion=$2
	;;
    abort-upgrade)	# Impossible because there is no prerm script
	newversion=$2
	exit 0
	;;
    abort-remove)	# Impossible because there is no prerm script
	failedpackage=$3; failedversion=$4
	exit 0
	;;
    abort-deconfigure)	# Impossible because there is no prerm script
	failedpackage=$3; failedversion=$4
	conflictingpackage=$6; conflictingversion=$7
	exit 0
	;;
esac

# Here we have $1 == configure
# Other cases are stopped



###°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°
### We take values stored by debconf
###____________________________________________________________________________
db_get ${package}/ISP && debconf_ISP=$RET
db_get ${package}/VPI && debconf_VPI=$RET
db_get ${package}/VCI && debconf_VCI=$RET
db_get ${package}/Encapsulation && debconf_Encapsulation=$RET
db_get ${package}/Linetype && debconf_Linetype=$RET
db_get ${package}/static_ip && debconf_static_ip=$RET
db_get ${package}/update_dns && debconf_update_dns=$RET
db_get ${package}/dsl_login && debconf_dsl_login=$RET
db_get ${package}/dsl_passwd && debconf_dsl_passwd=$RET
db_get ${package}/dsl_encrypt_passwd && debconf_dsl_encrypt_passwd=$RET
db_get ${package}/autostart && debconf_autostart=$RET
db_get ${package}/use_testconnec && debconf_use_testconnec=$RET

db_stop


###°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°
### Rewrite group and permissions
###____________________________________________________________________________
# Necessary if package is build with fakeroot
chgrp	dip	/usr/sbin/fctStartAdsl \
		/usr/sbin/fctStopAdsl \
		/usr/sbin/startadsl \
		/usr/sbin/stopadsl \
		/usr/sbin/eaglediag \
		/usr/sbin/eagleconfig \
		/usr/sbin/eagleconfig_front.bash \
		/usr/sbin/eagletestconnec \
		/usr/sbin/eaglectrl \
		/usr/sbin/eaglestat \
		/usr/sbin/pppoa
chmod	4754	/usr/sbin/eaglectrl
chmod	4754	/usr/sbin/pppoa


###°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°
### Extract / transform values
###____________________________________________________________________________
# Translate value to use eagleconfig
ISP=$debconf_ISP
VPI=$debconf_VPI
VCI=$debconf_VCI
Linetype=$debconf_Linetype
static_ip=$debconf_static_ip
dsl_login=$debconf_dsl_login
dsl_passwd=$debconf_dsl_passwd

if [ $debconf_dsl_encrypt_passwd = "false" ]
then dsl_encrypt_passwd=0
else dsl_encrypt_passwd=1
fi

if [ $debconf_update_dns = "false" ]
then update_dns=0
else update_dns=1
fi

if [ $debconf_use_testconnec = "false" ]
then use_testconnec=0
else use_testconnec=1
fi

if [ $debconf_autostart = "onboot" ]
then autostart=1
else autostart=0
fi

case $debconf_Encapsulation in
    "MPOA_MODE_BRIDGED_ETH_LLC" )	Encapsulation="00000001"	;;
    "MPOA_MODE_BRIDGED_ETH_VC")		Encapsulation="00000002"	;;
    "MPOA_MODE_ROUTED_IP_LLC")		Encapsulation="00000003"	;;
    "MPOA_MODE_ROUTED_IP_VC")		Encapsulation="00000004"	;;
    "MPOA_MODE_PPPOA_LLC")		Encapsulation="00000005"	;;
    "MPOA_MODE_PPPOA_VC")		Encapsulation="00000006"	;;
esac

###°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°
### Call to eagleconfig
###____________________________________________________________________________
# Perform the configuration

tmp="LINETYPE=$Linetype"
tmp="${tmp}|VPI=$VPI"
tmp="${tmp}|VCI=$VCI"
tmp="${tmp}|ENC=$Encapsulation"
tmp="${tmp}|ISP=$ISP"
tmp="${tmp}|ISP_LOGIN=$dsl_login"
tmp="${tmp}|ISP_PWD=$dsl_passwd"
tmp="${tmp}|PWD_ENCRYPT=$dsl_encrypt_passwd"
tmp="${tmp}|STATIC_IP=$static_ip"
tmp="${tmp}|UPDATE_DNS=$update_dns"
tmp="${tmp}|START_ON_BOOT=$autostart"
tmp="${tmp}|USE_TESTCONNEC=$use_testconnec"
tmp="${tmp}|EU_LANG=auto"
#tmp="${tmp}|FORCE_IF="

# We don't want the installation fail because bad parameters
(eagleconfig --params="${tmp}")
case $? in 
    0) ;; # All is OK
    1)  # FIXME: maybe it is not a error
	#exit 1
	;;
    *)  ;; # it isn't an error (no synchronisation; no module)
esac


###°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°
### Other configurations
###____________________________________________________________________________
# All is not performed by eagleconfig

# Paranoïa, paranoïa, au pays de la paranoïa...
umask 0077

# $Encapsulation => $PPPOX
encapsToPppox "$Encapsulation"

### Make temporary file
TMP=`mktemp /tmp/debconf.${package}.$$.XXXXXX`
touch $TMP


### ---- --- ------------- ----
### ---- pon configuration ----
if [ $PPPOX != "none" ]; then # pppoa || pppoe
    if [ ! -e /etc/ppp/peers/providers ]; then
	ln -sf adsl /etc/ppp/peers/providers
    fi
fi


### ---- ------------- ----
### ---- modprobe.conf ----
if [ $PPPOX = "none" ]; then # Routed ip
    rm -f /etc/modprobe.d/${package}
else                         # pppoa || pppoe
    if [ -d /etc/modprobe.d/ ]; then
	cat >/etc/modprobe.d/${package} <<EOF
# Useful for users of udev
install eagle-usb /sbin/modprobe ppp-async; /sbin/modprobe --ignore-install eagle-usb
EOF
	chmod 644 /etc/modprobe.d/${package}
    fi
fi

### --- ---- --- ---------- -
### How boot the connection ?

# !!! infamous do-it-yourselfing !!!
# I think replace this by a good configuration of interfaces
# with a virtual iface and a mapping with hotplug
if [ "$debconf_autostart" = "onplug" ]; then
    if [ -f /etc/hotplug/usb/${package} ]; then
	/usr/bin/perl -nle '$i=1 if /eaglectrl/; print if $i == 0;' \
	    /etc/hotplug/usb/${package} >$TMP
	echo "	eaglectrl -d 0>&1 1>&1 2>&1 | logger; /etc/init.d/${package} start" >>$TMP
	/usr/bin/perl -nle 'print if $i == 1; $i=1 if /eaglectrl/;' \
	    /etc/hotplug/usb/${package} >>$TMP
	cat $TMP >/etc/hotplug/usb/${package}
    fi
else
    if [ -f /etc/hotplug/usb/${package} ]; then
	/usr/bin/perl -nle '$i=1 if /eaglectrl/; print if $i == 0;' \
	    /etc/hotplug/usb/${package} >$TMP
	echo "	eaglectrl -d 0>&1 1>&1 2>&1 | logger" >>$TMP
	/usr/bin/perl -nle 'print if $i == 1; $i=1 if /eaglectrl/;' \
	    /etc/hotplug/usb/${package} >>$TMP
	cat $TMP >/etc/hotplug/usb/${package}
    fi
fi

### Erase temporary file
rm -f $TMP

###°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°
### End of configuration
###____________________________________________________________________________

#DEBHELPER#

exit 0
