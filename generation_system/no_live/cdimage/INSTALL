	INDICE
	======
	|- Software necesario
	|- Especificar variables CDIMAGE_ROOT y PATH
	|- etc/config
	|- Rellenar el directorio ftp/
	|  |- update-udebs
	|  |- update-debs
	|  |- update-installer-i386
	|  |- update-indices
	|  `- update-pool
	|- El directorio uda
	|  |- conf/
	|  |- pkg/
	|  `- lists/
	|  |   |- exclude
	|  |   |- include_breezy
	|  |   `- include_uda
	|  `- isolinux/
	`- Firma gpg
	   |- Nueva clave
	   |- Directorio secret/
	   |- Cambio en debian-cd/CONF.sh
	   `- ubuntu-keyring, ubuntu-keyring-udeb

  Software necesario
  ------------------
    debootstrap
    python

  Especificar variables CDIMAGE_ROOT y PATH
  -----------------------------------------
    Es imprescindible, que antes de ejecutar cualquier script en bin/ se ejecute:

      export CDIMAGE_ROOT=path_to_cdimage_dir
      export PATH=$PATH:$CDIMAGE_ROOT/bin
      
  etc/config
  ----------
    Es importante cambiar las variables de este fichero:
      PROJECT, CAPPROJECT, DIST, ARCHES, GNUPG_DIR, SIGNING_KEYID
					 
  Rellenar el directorio ftp/
  ---------------------------
    Este directorio tiene que contener los directorios: pool, dists e indices.
    Para ello, hay varios scripts en bin/ que descargan desde un repositorio
    de breezy todo los paquetes basandose en la lista de ficheros incluidos
    del último daily-build.

    	update-udebs
	------------
	    Dentro de este fichero hay una variable MIRROR. Si dispone de un
	  mirror locale, cambie esta variable.
	  
	    Al ejecutar este script, se descargaran todos los udebs necesarios
	  y se actualizarán los ya existentes.
	  
	    Todos los udebs se iran colocando en ftp/pool/
	  
    	update-debs
	-----------
	    Dentro de este fichero hay una variable MIRROR. Si dispone de un
	  mirror locale, cambie esta variable.
	  
	    Al ejecutar este script, se descargaran todos los debs necesarios
	  excluyendo los listados en uda/lists/exclude

	    Todos los debs se iran colocando en ftp/pool/

    	update-installer-i386
	---------------------
	    Sincroniza por rsync el directorio 
	  ftp/dists/breezy/main/installer-i386
	  
	update-indices
	--------------
	    Sincroniza por rsync el directorio ftp/indices
	    
	update-pool
	-----------
	    Enmascara a todos los scripts anteriores:
	    
	  update-pool --all		(Actualiza todo)
	  update-pool --udebs --debs    (Únicamente actualiza los paquetes)
	  update-pool --indices		(Únicamente actualiza indices)
	
  El directorio uda
  -----------------
  	conf/
	-----
	    En este directorio se podran encontrar diversos ficheros .conf 
	  usados por bin/update-dist para generar ficheros varios para dist/
  	pkg/
	----
	    Al incluir un .deb en este directorio, bin/upgrader lo indexará en
	  el pool. Sólo se copiará si el paquete es mayor que la versión
	  existente en el pool. (Se mueve siempre a main).
	lists/
	------
	    En este directorio hay tres listas bien diferenciadas:

		exclude
		-------
		    Todo paquete en esta lista no se incluiran en el cd.
		  Notese que el sistema está basado en los cd's de breezy, 
		  esta lista será un listado de aplicaciones que se incluyen
		  en el cd de breezy pero que no se incluirán en el cd de una
		  distribución uda.

		include_breezy (NO IMPLEMENTADO)
		--------------
		    Todo paquete que se encuentre en el repositorio de breezy
		  pero que no se encuentren en el cd de breezy por defecto.

		include_uda (NO IMPLEMENTEADO)
		-----------
		    Todo paquete que no se encuentre en el repositorio de breezy.

	isolinux
	--------
	    Todos los archivos contenidos en este directorio sustituiran a los
	  generados por debian-cd.

  Firma gpg
  ---------
	Nueva clave/
	------------
	  Para generar una nueva clave gpg: 
	    gpg --gen-key

  	Directorio secret/
	------------------
	    Es necesario crear este directorio tal que:
		
		cdimage/
		|-- bin/
		|-- debian-cd/
		|-- ...
		`--secret/
		   `-- dot-gnupg
		       |-- pubring.gpg
		       `-- secring.gpg

	Cambio en debian-cd/CONF.sh
	---------------------------
	    Es necesario exportar la identidad de la clave en este fichero,
	  para ello, editamos el fichero e incluimos:
		  export SIGNING_KEYID=E8AC3912
	  Sustituyendo la identidad por la correspondiente a la clave pública.

	ubuntu-keyring
	--------------
	    Es necesario obtener el paquete fuente ubuntu-keyring:
	      apt-get source ubuntu-keyring
	  Y cambiar las el fichero keyrings/ubuntu-archive-keyring.gpg por
	  el fichero .gpg de nuestra clave pública. (Manteniendo el nombre
	  ubuntu-archive-keyring.gpg).

	    Tras recompilar el paquete se generarán un .udeb y un .deb, ambos
	  son necesarios y tienen que sustituir a los oficiales porque sino
	  durante la instalación habra un fallo al comprobar los paquetes.
