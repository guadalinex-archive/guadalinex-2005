#!/bin/sh

RET=""
LOG="$CDIMAGE_ROOT/log/update-debs-continuacion"
MIRROR="archive.ubuntu.com"
FLAVOURS="main universe multiverse"
cd $CDIMAGE_ROOT/scratch/guadalinex/tmp
[ ! -d update-debs ] && mkdir update-debs
cd update-debs

select_list () {

	if [ "$1" == "main" ]; then
		RET="$CDIMAGE_ROOT/uda/lists/include_breezy"
	elif [ "$1" == "universe" ]; then
		RET="/tmp/not-main"
	elif [ "$1" == "multiverse" ]; then
		RET="/tmp/not-universe"
	else	
		echo "Error on the name of the repository passed!!!!" && exit 1
	fi
}

search_download () {

	echo "Let's have a look at $1..."
	> /tmp/not-$1
	[ ! -d $1 ] && mkdir $1
	cd main
	[ -f Packages ] && rm Packages
	[ -f Packages.gz ] && rm Packages.gz

	wget http://$MIRROR/ubuntu/dists/breezy/$1/binary-i386/Packages.gz && gunzip Packages.gz

	select_list $1
	
	for x in $(cat $RET)
	do
		REMOTE_PATH=$(cat Packages | grep-dctrl -P -e ^$x$ -s Filename | awk '{print $2}')
		REMOTE_NAME=${REMOTE_PATH/*\//}
		if [ -z $REMOTE_PATH ]; then
			echo $x >> /tmp/not-$1
		else
			REMOTE_VERSION=$(echo $REMOTE_NAME | sed s/.deb$//g | sed s/_all$//g | sed s/_i386$//g | sed s/.*_//g)
			REMOTE_DIR=$(dirname $REMOTE_PATH)
			if [ ! -d $CDIMAGE_ROOT/ftp/$REMOTE_DIR ]; then
				mkdir -p $CDIMAGE_ROOT/ftp/$REMOTE_DIR
				wget http://$MIRROR/ubuntu/$REMOTE_PATH -o $CDIMAGE_ROOT/ftp/$REMOTE_PATH
				echo "wget http://$MIRROR/ubuntu/$REMOTE_PATH -o $CDIMAGE_ROOT/ftp/$REMOTE_PATH"
			else
				LOCAL_FILENAME=$(find $CDIMAGE_ROOT/ftp/$REMOTE_DIR -name "$x\_*.deb" | cut -c 3-)
				LOCAL_VERSION=$(echo CANDIDATE_FILENAME | sed s/.deb$//g | sed s/_all$//g | sed s/_i386$//g | sed s/.*_//g)

				if dpkg --compare-versions "$REMOTE_VERSION" gt "$LOCAL_VERSION"; then
					wget http://$MIRROR/ubuntu/$REMOTE_PATH -o $CDIMAGE_ROOT/ftp/$REMOTE_PATH
					echo "wget http://$MIRROR/ubuntu/$REMOTE_PATH -o $CDIMAGE_ROOT/ftp/$REMOTE_PATH"

                                	if [ "$?" == "0" ]; then
                                        	rm $CDIMAGE_ROOT/ftp/$REMOTE_DIR/$LOCAL_FILENAME && echo "Upgraded deb: $x" >> $LOG
                                	else
                                        	echo "A problem ocurred downloading $x" >> $LOG
						echo "ERROR. Have a look at the log for more information"
						exit
                		        fi
	                        else
        	                        echo "Local version is ok" >> $LOG
        	                fi
			fi
		fi

	done

	cd - > /dev/null
	[ -z "$(cat /tmp/not-$1)" ] && exit 0
}

for x in $FLAVOURS
do
	search_download $x
done

echo "Packages missing:"
cat  /tmp/not-multiverse

exit 0
