#!/usr/bin/python

'''
Installer

This is a installer program for a Ubuntu or Metadistros Live system.
This is the main program, but there is also a couple of libraries to
help it to work. For example the frontends library.
The way it works is simple. It detect the Frontend to use, then
load the module for that frontend. After that, it makes some calls
through the frontend in order to get the info necessary to install.

Once it has the info, partitioning, format, copy de distro to the disk
and configure everything.
'''

import sys
import shutil
import os
import debconf
import ue

class Installer:
    source = '/source'
    target = '/target'
    
    def frontend(self, type='gtk'):
        '''frontend(type='gtk') -> none
        
        Get the type of frontend to use and load the module for that.
        Get the locales stuff with get_locales() method and ask
        the hostname, fullname, username and  password through the
        selected frontend.
        After get everything call to the install() method.
        '''
        mod = __import__('ue.frontend', globals(), locals() , [type])
        ui = getattr(mod, type)

        self.distro = os.listdir('/usr/share/ubuntu-express/htmldocs/')[0]
        self.wizard = ui.Wizard(self.distro)
        foo = False
        pid = os.fork()
        if pid == 0:
            self.wizard.run()
            foo = True
            print 'After run()'
        else:
            status = self.wizard.is_active()
            print status
            while status == False and foo == False:
                status = self.wizard.is_active()
            print status
            print 'After while'
            self.install()

    def install(self):
        '''install() -> none

        Here is all the logic of the program. After get the info from the
        frontend, the program do all it need to install the distro to the
        target(partitioning,formating,copy and postconfig).
        '''
        timezone, keymap, locales = self.get_locales()
        hostname, fullname, username, password = self.wizard.get_info()
	mountpoints = self.wizard.get_partitions()
        #self.format_target(mountpoints)
        #self.mount_target(mountpoints)
        self.mount_source()
        try:
            self.copy_all()
        finally:
            self.unmount_source()

        try:
            self.configure_fstab(mountpoints)
            self.configure_timezone(timezone)
            self.configure_keymap(keymap)
            self.configure_user(username, password, fullname)
            self.configure_hostname(hostname)
            self.configure_network()
            #self.configure_bootloader(mountpoints['/'])
            self.configure_hardware()
        finally:
            #self.unmount_target(mountpoints)
            pass
    def unmount_target(self, mountpoints):
        for path, device in mountpoints.items():
            if path in ('/', 'swap'):
                continue
            path = os.path.join(self.target, path[1:])
            self.ex('umount', path)
        self.ex('umount', self.target)

if __name__ == '__main__':
    Installer().frontend()

# vim:ai:et:sts=4:tw=80:sw=4:
