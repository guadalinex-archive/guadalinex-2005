--- ubuntu-express	2005-07-15 11:54:57.000000000 +0100
+++ installer	2005-07-22 04:46:57.000000000 +0100
@@ -12,8 +12,18 @@
     source = '/source'
     target = '/target'
 
-    def install(self, mountpoints, timezone, keymap, username, password, fullname,
-                hostname):
+    def frontend(self, type='noui'):
+      ui = getattr(__import__('frontend.%s' % type), type)
+
+      self.wizard = ui.Wizard()
+      hostname = self.wizard.get_hostname()
+      timezone, keymap, locales    = self.wizard.get_locales()
+      fullname, username, password = self.wizard.get_user()
+
+      self.install(timezone,keymap,locales,username,password,fullname,hostname)
+
+    def install(self, timezone, keymap, locales, username, password, fullname, hostname):
+	mountpoints = self.wizard.get_partitions()
         self.mount_target(mountpoints)
         self.mount_source()
         try:
@@ -32,6 +42,7 @@
         finally:
             self.unmount_target(mountpoints)
 
+
     def configure_fstab(self, mountpoints):
         fstab = open(os.path.join(self.target,'etc/fstab'), 'w')
         for path, device in mountpoints.items():
@@ -77,12 +88,11 @@
         self.chrex('mount', '-t', 'proc', 'proc', '/proc')
         self.chrex('mount', '-t', 'sysfs', 'sysfs', '/sys')
 
-        uname = subprocess.Popen(['uname', '-r'], stdout=subprocess.PIPE)
-        kernel_version = uname.stdout.read().rstrip()
-        uname.wait()
+        kernel_version = open('/proc/sys/kernel/osrelease').readline().strip()
+        packages = ['gnome-panel', 'xserver-xorg', 'linux-image-' + kernel_version]
         
         try:
-            for package in ('gnome-panel', 'xserver-xorg', 'linux-image-' + kernel_version):
+            for package in packages:
                 self.copy_debconf(package)
                 self.reconfigure(package)
         finally:
@@ -124,7 +134,9 @@
                 fqpath = os.path.join(self.source, dirpath, name)
 
                 if os.path.isfile(fqpath):
-                    files.append((relpath, os.path.getsize(fqpath)))
+		    size = os.path.getsize(fqpath)
+		    total_size += size	
+                    files.append((relpath, size))
                 else:
                     files.append((relpath, None))
 
@@ -137,19 +149,34 @@
             copy.stdin.write(path + '\0')
             if size is not None:
                 copied_bytes += size
+            per = (copied_bytes * 100) / total_size
+            self.wizard.set_progress(per)
 
         copy.stdin.close()
         copy.wait()
         
 
     def mount_source(self):
-        self.ex('losetup', '/dev/cloop1', '/cdrom/casper/filesystem.cloop')
+	from os import path
+	files = ['/cdrom/casper/filesystem.cloop', '/cdrom/META/META.squashfs']
+	for f in files:
+		if path.isfile(f) and path.splitext(f)[1] == '.cloop':
+			file = f
+			self.dev = '/dev/cloop1'
+		elif path.isfile(f) and path.splitext(f)[1] == '.squashfs':
+			file = f
+			self.dev = '/dev/loop3'
+		else:
+                    return -1			
+
+        self.ex('losetup', self.dev, file)
         os.mkdir(self.source)
-        self.ex('mount', '/dev/cloop1', self.source)
+        self.ex('mount', self.dev, self.source)
+	return 0
 
     def unmount_source(self):
         self.ex('umount', self.source)
-        self.ex('losetup', '-d', '/dev/cloop1')
+        self.ex('losetup', '-d', self.dev)
 
     def ex(self, *args):
         status = subprocess.call(args)
@@ -177,4 +204,6 @@
         self.chrex('dpkg-reconfigure', '-fnoninteractive', package)
 
 if __name__ == '__main__':
-    Installer().install({'/' : sys.argv[1]}, 'US/Pacific', 'dvorak', 'mdz', 'mdz2', 'Matt Zimmerman', 'ubuntu')
+    Installer().frontend()
+
+# vim:ai:et:sts=4:tw=80:sw=4:
