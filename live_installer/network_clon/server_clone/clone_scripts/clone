# Live filesystem mounting			-*- shell-script -*-
# 

# Parameter: Where to mount the filesystem
mountroot ()
{
	# checkings
	[ "$quiet" != "y" ] && log_begin_msg "Running /scripts/clone-top"
	run_scripts /scripts/clone-top
	[ "$quiet" != "y" ] && log_end_msg

	# Get the root filesystem type
	if [ ! -e "${ROOT}" ]; then
		panic "ALERT!  ${ROOT} does not exist.  Dropping to a shell!"
	fi

	# Find and mount the Image
	[ "$quiet" != "y" ] && log_begin_msg "Running /scripts/clone-premount"
	run_scripts /scripts/clone-premount
        if [ ! -e /mnt/image/etc ]; then
                panic "Something wrong with the image mounting"
                # Just in case
                FS1='(initramfs) ' exec /bin/sh </dev/console >/dev/console 2>&1
        fi
	[ "$quiet" != "y" ] && log_end_msg

	modprobe -q unionfs

	# Mount root
	unionfs=${rootmnt}
	changes=/mnt/changes
	image=/mnt/image
	dirs=${unionfs}/.dirs
	mkdir -p ${changes}

	mount -t unionfs -o dirs=${changes}=rw:${image}=ro unionfs ${unionfs} 

	mkdir -p ${dirs}
	mount -o move /mnt ${dirs}
	
	if [ $? != 0 ]; then
		panic "Something wrong with the unionfs mounting"
		# Just in case
		FS1='(initramfs) ' exec /bin/sh </dev/console >/dev/console 2>&1
	fi

	[ "$quiet" != "y" ] && log_begin_msg "Running /scripts/clone-bottom"
	run_scripts /scripts/clone-bottom
	[ "$quiet" != "y" ] && log_end_msg

	init="/usr/sbin/netcloner"	

}
