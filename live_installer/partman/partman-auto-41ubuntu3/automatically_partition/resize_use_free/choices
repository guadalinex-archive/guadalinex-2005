#!/bin/sh

. /lib/partman/definitions.sh
. /lib/partman/resize.sh

bestfree=0
bestpart=none

scan_disk () {
    open_dialog PARTITIONS
    partitions="$(read_paragraph)"
    close_dialog

    totalfree=0
    bestfree=0
    bestpart=none
    echo "$partitions" | while { read num oldid size type fs path name; [ "$oldid" ]; }; do
	case $fs in
	    free)
		totalfree=$(($totalfree + $size))
		;;

	    linux-swap|ext2|ext3|fat16|fat32)
		get_resize_range
		thisfree=$(($cursize - $minsize))
		if longint_le $bestfree $thisfree; then
		    bestfree=$thisfree
		    bestpart=$dev//$oldid
		fi
		;;

	    ntfs)
		if ! type ntfsresize >/dev/null 2>&1; then
		    continue
		fi
		check_virtual
		if [ "$virtual" = yes ]; then
		    get_resize_range
		else
		    get_ntfs_resize_range
		fi
		thisfree=$(($cursize - $minsize))
		if longint_le $bestfree $thisfree; then
		    bestfree=$thisfree
		    bestpart=$dev//$oldid
		fi
		;;
	esac
	echo "$totalfree $bestfree $bestpart"
    done | tail -n1
}

for dev in $DEVICES/*; do
    [ -d $dev ] || continue
    cd $dev

    scanned="$(scan_disk)"
    totalfree="${scanned%% *}"
    cdr="${scanned#* }"
    thisfree="${cdr%% *}"
    if longint_le "$bestfree" "$thisfree"; then
	bestfree="$thisfree"
	bestpart="${cdr#* }"
    fi

    if longint_le $((2 * 1024 * 1024 * 1024)) $totalfree; then
	# enough space, no need to resize
	exit 0
    fi
done

if [ "$bestpart" ] && longint_le $((3 * 1024 * 1024 * 1024)) $bestfree; then
    dev="$(cat "${bestpart%//*}"/device)"
    num=$(sed 's/^[^0-9]*\([0-9]*\)[^0-9].*/\1/' "$bestpart/view")
    db_subst partman-auto/text/resize_use_free PARTITION "$(humandev "${dev%/disc}/part$num")"
    db_metaget partman-auto/text/resize_use_free description
    printf "$bestpart\t$RET"
fi
